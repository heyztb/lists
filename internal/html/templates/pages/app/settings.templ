package app

import "github.com/heyztb/lists/internal/database"
import "github.com/heyztb/lists/internal/html/templates/shared"
import "github.com/heyztb/lists/internal/html/templates/components/nav"
import "github.com/heyztb/lists/internal/html/templates/components/icons"

templ Settings(user database.User) {
	@shared.Page("Settings â€” Lists", true) {
		<div class="flex w-full min-h-screen">
			@nav.Sidebar(user)
			<main class="flex-1 bg-muted/40 p-8 md:p-16">
				<div class="max-w-4xl mx-auto grid gap-8">
					<h1 class="text-2xl font-bold">
						Settings 
						<button class="inline-block align-middle float-right hover:cursor-pointer" title="Back to dashboard" id="close">
							@icons.Close()
							<script defer>
							  me().on('click', ev => {
							    halt(ev); 
							    window.location.href = '/app'
							  })
							</script>
						</button>
					</h1>
					<div class="flex items-center gap-6">
						@icons.ProfilePicture(user)
						<div class="grid gap-1">
							<div class="text-xl font-bold" id="user-name">{ user.Name.String }</div>
							<div class="text-muted-foreground">{ user.Identifier }</div>
						</div>
					</div>
					<div class="rounded-lg border bg-card text-card-foreground shadow-sm" data-v0-t="card">
						<div class="flex flex-col space-y-1.5 pt-6 px-6">
							<h3 class="whitespace-nowrap text-2xl font-semibold leading-none tracking-tight">Profile</h3>
							<p class="text-sm text-muted-foreground">Update your public profile information.</p>
						</div>
						<div class="p-6 grid gap-6">
							<div class="grid gap-2">
								<label
									class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
									for="name"
								>
									Name
								</label>
								<input
									class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
									id="name"
									name="name"
									hx-patch="/api/account/name"
									hx-trigger="focusout changed delay:500ms"
									hx-target="#form-response"
									placeholder="Enter your name"
									value={ user.Name.String }
								/>
								<span id="form-response" class="text-sm">
									<script>
									  me('body').on('htmx:afterSwap', async ev => {
									    if (ev.target.id === 'form-response') {
									      me('#user-name').innerText = me('#name').value
									      await sleep(5000)
									      me('#form-response').innerText = ''
									    }
									  })
								  </script>
								</span>
							</div>
							<div class="flex items-center gap-2">
								<button hx-get="/htmx/modal/changeemail" hx-target="body" hx-swap="beforeend" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2">
									Change Email
								</button>
								<button hx-get="/htmx/modal/changepassword" hx-target="body" hx-swap="beforeend" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2">
									Change Password
								</button>
								<input
									class="hidden"
									id="avatar"
									name="avatar"
									type="file"
								/>
								<label
									class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 inline-flex items-center gap-2 cursor-pointer"
									for="avatar"
								>
									<svg
										xmlns="http://www.w3.org/2000/svg"
										width="24"
										height="24"
										viewBox="0 0 24 24"
										fill="none"
										stroke="currentColor"
										stroke-width="2"
										stroke-linecap="round"
										stroke-linejoin="round"
										class="h-5 w-5"
									>
										<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
										<polyline points="17 8 12 3 7 8"></polyline>
										<line x1="12" x2="12" y1="3" y2="15"></line>
									</svg>
									Change Avatar
									<script>
									  me('#avatar').on('change', async evt => {
									    const data = new FormData()
									    data.append('avatar', evt.target.files[0])
									    const response = await fetch(`/api/account/avatar`, {
									      method: 'PATCH',
									      body: data
									    })
									    if (response.ok) {
									      window.location.reload()
									    } else {
									      me('#form-response').innerText = 'Something went wrong, please try again later.'
									      await sleep(5000)
									      me('#form-response').innerText = ''
									    }
									  })
									</script>
								</label>
							</div>
						</div>
					</div>
					<div class="rounded-lg border bg-card text-card-foreground shadow-sm" data-v0-t="card">
						<div class="flex flex-col space-y-1.5 pt-6 px-6">
							<h3 class="whitespace-nowrap text-2xl font-semibold leading-none tracking-tight">Security</h3>
							<p class="text-sm text-muted-foreground">Manage your account security settings.</p>
						</div>
						<div class="p-6 grid gap-4">
							<div class="flex items-center justify-between">
								<div>
									<div class="font-medium">Two-Factor Authentication</div>
									<div class="text-sm text-muted-foreground">Add an extra layer of security to your account.</div>
								</div>
								if !user.MfaSecret.Valid {
									<button hx-get="/htmx/modal/enable2fa" hx-target="body" hx-swap="beforeend" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2">
										Enable 2FA
									</button>
								} else {
									<button hx-delete="/api/auth/disable2fa" hx-confirm="This will disable two factor authentication for your account. You may re-enable it afterwards if you choose. Click 'Ok' to continue." class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2">
										Disable 2FA
									</button>
								}
							</div>
							<div data-orientation="horizontal" role="none" class="shrink-0 bg-border h-[1px] w-full"></div>
							<div class="flex items-center justify-between">
								<div>
									<div class="font-medium">Delete Account</div>
									<div class="text-sm text-muted-foreground">This will permanently delete your account and all your data.</div>
								</div>
								<button hx-delete="/api/auth/delete" hx-confirm="Are you sure you wish to delete your account? This cannot be undone. Click 'Ok' to proceed." class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-destructive hover:text-accent-foreground h-10 px-4 py-2">
									Delete account
								</button>
							</div>
						</div>
					</div>
				</div>
			</main>
		</div>
	}
}
