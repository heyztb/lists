package modals

templ ChangePassword(identifier string) {
	<div id="changepassword" @click.away="me('#changepassword').remove()" class="rounded-lg border bg-muted text-card-foreground shadow-md w-full max-w-md fixed top-1/2 left-1/2 translate-x-[-50%] translate-y-[-50%] z-[1000] mx-auto backdrop-blur-xl">
		<div class="flex flex-col space-y-1.5 pt-6 px-6">
			<h3 class="whitespace-nowrap text-2xl font-semibold leading-none tracking-tight">Update Password</h3>
			<p class="text-sm text-muted-foreground">Enter your current and new password to update your account.</p>
		</div>
		<div class="p-6">
			<form class="space-y-4" id="changepasswordform">
				<div class="space-y-2">
					<label
						class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
						for="currentPassword"
					>
						Current Password
					</label>
					<input
						class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
						id="currentPassword"
						name="currentPassword"
						required=""
						type="password"
					/>
				</div>
				<div class="space-y-2">
					<label
						class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
						for="newPassword"
					>
						New Password
					</label>
					<input
						class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
						name="newPassword"
						id="newPassword"
						required=""
						type="password"
					/>
				</div>
				<div class="space-y-2">
					<label
						class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
						for="confirmPassword"
					>
						Confirm Password
					</label>
					<input
						class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
						name="confirmPassword"
						id="confirmPassword"
						required=""
						type="password"
					/>
				</div>
				<span class="inline-flex text-sm" id="error"></span>
				<div class="grid grid-cols-2 gap-x-2">
					<button
						class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2 w-full"
						type="submit"
					>
						Update Password
					</button>
					<button
						class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:text-accent-foreground hover:bg-accent h-10 px-4 py-2 w-full"
					>
						Close
						<script>
						  me().on('click', ev => {
						    halt(ev)
						    me('#changepassword').remove()
						  })
						</script>
					</button>
				</div>
				@templ.JSONScript("identifier", identifier)
				<script type="module">
	        import { SRPClient } from '/assets/js/srp.min.js'
	        const client = new SRPClient()

				  me('#changepasswordform').on('submit', async ev => {
				    halt(ev);
            const form = new FormData(ev.target)
            const data = Object.fromEntries(form)
            const identifier = me('#identifier').textContent.replaceAll('"', '')
            const currentPassword = data['currentPassword']
            const newPassword = data['newPassword']
            const confirmPassword = data['confirmPassword']
            if (newPassword !== confirmPassword) {
              me('#error').innerText = 'Passwords do not match, please check and try again.'
              return
            }
            try {
              await client.login(identifier, currentPassword)
              await client.update(identifier, newPassword)
              client.terminate()
              window.location.href = '/login'
            } catch (e) {
              me('#error').innerText = e
              return
            }
				  })
				</script>
			</form>
		</div>
	</div>
}
